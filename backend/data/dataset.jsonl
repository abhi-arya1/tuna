{ "input": "How can I create a simple flowchart with Graphviz?", "output": "digraph G {\n  node [shape=box];\n  Start -> Process1;\n  Process1 -> Decision [label=\"Yes\"];\n  Decision -> Process2 [label=\"Condition True\"];\n  Process2 -> End;\n  Decision -> End [label=\"Condition False\"];\n}" }
{ "input": "Can you show me how to create a hierarchical organizational chart using Graphviz?", "output": "digraph G {\n  node [shape=record];\n  CEO -> Manager1;\n  CEO -> Manager2;\n  Manager1 -> Employee1;\n  Manager1 -> Employee2;\n  Manager2 -> Employee3;\n  Manager2 -> Employee4;\n}" }
{ "input": "I want to visualize a state machine with Graphviz. How can I do that?", "output": "digraph G {\n  rankdir=LR;\n  node [shape = doublecircle]; q2;\n  node [shape = circle];\n  q0 -> q1 [label = \"SS\"];\n  q0 -> q1 [label = \"SA,SA,SA,SA\"];\n  q1 -> q2 [label = \"SS\"];\n  q1 -> q2 [label = \"SA,SA,SA,SA\"];\n  q1 -> q3 [label = \"SS\"];\n  q2 -> q0 [label = \"SA\"];\n  q2 -> q3 [label = \"SA\"];\n  q3 -> q3 [label = \"SA,SA,SA,SA\"];\n}" }
{ "input": "Please provide a Graphviz code to create a class diagram.", "output": "digraph G {\n  node [shape=record];\n  ClassA [label=\"ClassA|{<port1> +method1()|+method2()}\" style=filled, fillcolor=white];\n  ClassB [label=\"ClassB|{<port1> +method1()|+method2()}\" style=filled, fillcolor=white];\n  ClassA -> ClassB [label=\"uses\"]; \n}" }
{ "input": "How do I create a network diagram with Graphviz?", "output": "digraph G {\n  node [shape=circle];\n  A [ label=\"Router\" ];\n  B [ label=\"Switch\" ];\n  C [ label=\"PC1\" ];\n  D [ label=\"PC2\" ];\n  A -> B;\n  B -> C;\n  B -> D;\n}" }
{ "input": "Can you show a circularly linked list visualization in Graphviz?", "output": "digraph G {\n  node [shape=circle];\n  A -> B;\n  B -> C;\n  C -> D;\n  D -> A;\n}" }
{ "input": "I need a Graphviz code to represent a decision tree.", "output": "digraph G {\n  node [shape=record];\n  Decision1 [label=\"Decision1|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision2 [label=\"Decision2|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision3 [label=\"Decision3|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision1:port1 -> Decision2;\n  Decision1:port2 -> Decision3;\n}" }
{ "input": "How can I create a process flowchart for a software development lifecycle with Graphviz?", "output": "digraph G {\n  node [shape=box];\n  RequirementAnalysis -> Design;\n  Design -> Implementation;\n  Implementation -> Testing;\n  Testing -> Deployment;\n  Deployment -> Maintenance;\n}" }
{ "input": "Can you provide a Graphviz code to visualize a neural network?", "output": "digraph G {\n  node [shape=circle];\n -layer1 [label=\"Input Layer\", shape=record, style=filled, fillcolor=yellow];\n  h1_1 [label=\"H1_1\"];\n  h1_2 [label=\"H1_2\"];\n  -layer2 [label=\"Hidden Layer\", shape=record, style=filled, fillcolor=lightblue];\n  h2_1 [label=\"H2_1\"];\n  h2_2 [label=\"H2_2\"];\n  -layer3 [label=\"Output Layer\", shape=record, style=filled, fillcolor=lightgreen];\n  o_1 [label=\"O_1\"];\n\n  -layer1 -> h1_1;\n  -layer1 -> h1_2;\n  h1_1 -> -layer2;\n  h1_2 -> -layer2;\n  -layer2 -> h2_1;\n  -layer2 -> h2_2;\n  h2_1 -> -layer3;\n  h2_2 -> -layer3;\n  -layer3 -> o_1;\n}" }
{ "input": "How to create a timeline using Graphviz?", "output": "digraph G {\n  node [shape=box];\n  Start [label=\"Project Start\", shape=plaintext];\n  Task1 [shape=box];\n  Task2 [shape=box];\n  Task3 [shape=box];\n  End [label=\"Project End\", shape=plaintext];\n\n  Start -> Task1;\n  Task1 -> Task2;\n  Task2 -> Task3;\n  Task3 -> End;\n}" }
{ "input": "What is the Graphviz code for a simple tree structure?", "output": "digraph G {\n  A [shape=circle];\n  B [shape=circle];\n  C [shape=circle];\n  D [shape=circle];\n  E [shape=circle];\n  A -> B;\n  A -> C;\n  B -> D;\n  B -> E;\n}" }
{ "input": "Can you show me a Graphviz diagram for a finite state machine?", "output": "digraph G {\n  rankdir=LR;\n  node [shape = doublecircle]; q1 q3;\n  node [shape = circle]; q0 q2;\n  q0 -> q1 [label = \"A\"];\n  q1 -> q2 [label = \"C\"];\n  q1 -> q3 [label = \"B\"];\n  q2 -> q3 [label = \"A\"];\n  q2 -> q0 [label = \"B,C\"];\n  q3 -> q3 [label = \"A,B,C\"];\n}" }
{ "input": "I need to create a simple workflow diagram. How can I achieve this with Graphviz?", "output": "digraph G {\n  node [shape=box];\n  PrepareDocument -> ReviewDocument;\n  ReviewDocument -> ApproveDocument;\n  ApproveDocument -> FinalizeDocument;\n  FinalizeDocument -> DocumentCompleted;\n}" }
{ "input": "Show me how to create a Graphviz visualization for a directory structure.", "output": "digraph G {\n  rankdir=TB;\n  root [label=\"/\", shape=folder];\n  level1a [label=\"FolderA\", shape=folder];\n  level1b [label=\"FolderB\", shape=folder];\n  level2a [label=\"File1.txt\", shape=file];\n  level2b [label=\"File2.txt\", shape=file];\n  level2c [label=\"FolderC\", shape=folder];\n  level3a [label=\"File3.txt\", shape=file];\n  level3b [label=\"File4.txt\", shape=file];\n  root -> level1a;\n  root -> level1b;\n  level1a -> level2a;\n  level1a -> level2b;\n  level1a -> level2c;\n  level2c -> level3a;\n  level2c -> level3b;\n}" }
{ "input": "How can I draw a simple map with Graphviz?", "output": "digraph G {\n  rankdir=TB;\n  node [shape=ellipse];\n  A -> B [label=\"5\"];\n  A -> C [label=\"8\"];\n  B -> C [label=\"9\"];\n  B -> D [label=\"4\"];\n  C -> D [label=\"15\"];\n  C -> E [label=\"10\"];\n  D -> E [label=\"7\"]; \n}" }
{ "input": "Can you provide a Graphviz code for visualizing a database schema?", "output": "digraph G {\n  rankdir=LR;\n  node [shape=record];\n  Users [label=\"Users|{<uID> UserID|Name|Email}\"];\n  Orders [label=\"Orders|{<oID> OrderID|<uID> UserID|Price}\"];\n  Products [label=\"Products|{<pID> ProductID|Name|Price}\"];\n  OrderDetails [label=\"OrderDetails|{<oID> OrderID|<pID> ProductID|Quantity}\"];\n\n  Users:uID -> Orders:uID;\n  Orders:oID -> OrderDetails:oID;\n  Products:pID -> OrderDetails:pID;\n}" }
{ "input": "Provide a Graphviz code to visualize the dependency between software modules.", "output": "digraph G {\n  node [shape=box];\n  ModuleA -> ModuleB;\n  ModuleB -> ModuleC;\n  ModuleA -> ModuleD;\n  ModuleD -> ModuleE;\n  ModuleC -> ModuleE;\n}" }
{ "input": "How to create a decision tree with multiple branches in Graphviz?", "output": "digraph G {\n  node [shape=record];\n  Decision1 [label=\"Decision1|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision2 [label=\"Decision2|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision3 [label=\"Decision3|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision4 [label=\"Decision4|{<port1> Yes|<port2> No}\" style=filled, fillcolor=white];\n  Decision1:port1 -> Decision2;\n  Decision1:port2 -> Decision3;\n  Decision2:port1 -> Decision4;\n  Decision2:port2 -> Decision3;\n  Decision3:port1 -> Decision4;\n  Decision3:port2 -> Decision4;\n}" }
{ "input": "Create a Graphviz code to draw an entity-relationship diagram.", "output": "digraph G {\n  node [shape=box];\n  Customer [label=\"Customer|{CustomerID|Name|Email}\"];\n  Order [label=\"Order|{OrderID|OrderDate|CustomerID}\"];\n  Product [label=\"Product|{ProductID|ProductName|Price}\"];\n  OrderDetail [label=\"OrderDetail|{OrderID|ProductID|Quantity}\"];\n\n  Customer -> Order [dir=both];\n  Order -> OrderDetail [dir=both];\n  Product -> OrderDetail [dir=both];\n}" }
{ "input": "How can I create a Graphviz visualization of a family tree?", "output": "digraph G {\n  node [shape=box];\n  Father -> Son;\n  Father -> Daughter;\n  Son -> Grandson;\n  Daughter -> Granddaughter;\n}" }
{ "input": "Can you show a Graphviz example of a state machine with transitions?", "output": "digraph G {\n  rankdir=LR;\n  node [shape = doublecircle]; q0 q4;\n  node [shape = circle]; q1 q2 q3;\n  q0 -> q1 [label = \"x\"];\n  q1 -> q2 [label = \"y\"];\n  q2 -> q3 [label = \"z\"];\n  q3 -> q4 [label = \"w\"];\n}" }
{ "input": "Show me a Graphviz code for a binary tree.", "output": "digraph G {\n  node [shape=circle];\n  1 -> 2 [label=\"0\"];\n  1 -> 3 [label=\"1\"];\n  2 -> 4 [label=\"0\"];\n  2 -> 5 [label=\"1\"];\n  3 -> 6 [label=\"0\"];\n  3 -> 7 [label=\"1\"];\n}" }
{ "input": "How to represent a mind map with Graphviz?", "output": "digraph G {\n  node [shape=box];\n  MainIdea -> Idea1;\n  MainIdea -> Idea2;\n  Idea1 -> SubIdea1;\n  Idea1 -> SubIdea2;\n  Idea2 -> SubIdea3;\n  Idea2 -> SubIdea4;\n}" }
{ "input": "Create a Graphviz code for a process flow diagram.", "output": "digraph G {\n  node [shape=box];\n  Start -> DesignProcess;\n  DesignProcess -> Implementation;\n  Implementation -> Testing;\n  Testing -> Deployment;\n  Deployment -> Maintenance;\n}" }
{ "input": "How can I show a Git branching model with Graphviz?", "output": "digraph G {\n  node [shape=box];\n  Main [label=\"Main\", shape=folder];\n  Develop [label=\"Develop\", shape=folder];\n  FeatureA [label=\"FeatureA\", shape=component];\n  FeatureB [label=\"FeatureB\", shape=component];\n  Hotfix1 [label=\"Hotfix1\", shape=folder];\n\n  Main -> Develop;\n  Develop -> FeatureA;\n  Develop -> FeatureB;\n  Develop -> Hotfix1;\n}" }
{ "input": "What is the Graphviz code to display a pyramid structure?", "output": "digraph G {\n  node [shape=ellipse];\n  Level1 -> Level2a;\n  Level1 -> Level2b;\n  Level2a -> Level3a;\n  Level2a -> Level3b;\n  Level2b -> Level3c;\n  Level2b -> Level3d;\n}" }
{ "input": "Provide a Graphviz code for a simple timeline of project milestones.", "output": "digraph G {\n  rankdir=LR;\n  node [shape=ellipse];\n  Start [label=\"Start\", shape=plaintext];\n  Milestone1 -> Milestone2 [label=\"4 weeks\"];\n  Milestone2 -> Milestone3 [label=\"2 weeks\"];\n  Milestone3 -> End [label=\"3 weeks\"];\n  Start -> Milestone1;\n}" }
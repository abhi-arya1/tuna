{ "input": "Create a simple graph with two nodes and an edge between them.", "output": "digraph G {\n  A -> B;\n}" }
{ "input": "Draw a graph with three nodes and edges connecting each node to the next in a chain.", "output": "digraph G {\n  A -> B;\n  B -> C;\n}" }
{ "input": "Generate a tree structure with a root node and three children.", "output": "digraph G {\n  root -> A;\n  root -> B;\n  root -> C;\n}" }
{ "input": "Create a graph with a loop where node A points to node B and node B points to node A.", "output": "digraph G {\n  A -> B;\n  B -> A;\n}" }
{ "input": "Design a graph with node A pointing to node B, and node B pointing to node A and node C.", "output": "digraph G {\n  A -> B;\n  B -> A;\n  B -> C;\n}" }
{ "input": "Generate a simple directed graph with four nodes and edges pointing from each node to the next in a cycle.", "output": "digraph G {\n  A -> B;\n  B -> C;\n  C -> D;\n  D -> A;\n}" }
{ "input": "Create a graph representing a simple family tree with a parent node and two child nodes.", "output": "digraph G {\n  Parent -> Child1;\n  Parent -> Child2;\n}" }
{ "input": "Draw a graph with a cluster of nodes and edges connecting each node within the cluster.", "output": "digraph G {\n  subgraph cluster_0 {\n    label=\"Cluster\";\n    A -> B;\n    B -> C;\n    C -> A;\n  }\n}" }
{ "input": "Generate a graph with a diamond shape using four nodes and five edges.", "output": "digraph G {\n  A -> B;\n  A -> C;\n  B -> D;\n  C -> D;\n  B -> C;\n}" }
{ "input": "Create a graph with a node that points to two other nodes, and one of those nodes points to a third node.", "output": "digraph G {\n  A -> B;\n  A -> C;\n  B -> D;\n}" }
{ "input": "Design a simple undirected graph with three nodes and three edges forming a triangle.", "output": "graph G {\n  A -- B;\n  B -- C;\n  C -- A;\n}" }
{ "input": "Draw a graph with two clusters, each containing two nodes, and an edge connecting a node in each cluster.", "output": "digraph G {\n  subgraph cluster_0 {\n    label=\"Cluster 1\";\n    A -> B;\n  }\n  subgraph cluster_1 {\n    label=\"Cluster 2\";\n    C -> D;\n  }\n  B -> C;\n}" }
{ "input": "Generate a graph with a node labeled 'Start' that points to two child nodes labeled 'Yes' and 'No', and each child node points to a third node labeled 'End'.", "output": "digraph G {\n  Start -> Yes;\n  Start -> No;\n  Yes -> End;\n  No -> End;\n}" }
{ "input": "Create a graph with a hierarchical structure having a root node and three children, each with two children of their own.", "output": "digraph G {\n  root -> A;\n  root -> B;\n  root -> C;\n  A -> A1;\n  A -> A2;\n  B -> B1;\n  B -> B2;\n  C -> C1;\n  C -> C2;\n}" }
{ "input": "Draw a graph with two parallel paths starting from node A and ending at node B.", "output": "digraph G {\n  A -> B [label=\"Path 1\"];\n  A -> C;\n  C -> B [label=\"Path 2\"];\n}" }
{ "input": "Generate a graph with a main node connected to two subgraphs, each containing two nodes.", "output": "digraph G {\n  Main -> A;\n  Main -> B;\n  subgraph cluster_0 {\n    label=\"Subgraph 1\";\n    A -> A1;\n    A -> A2;\n  }\n  subgraph cluster_1 {\n    label=\"Subgraph 2\";\n    B -> B1;\n    B -> B2;\n  }\n}" }
{ "input": "Create a graph with a central node connected to four surrounding nodes, forming a star shape.", "output": "graph G {\n  center -- node1;\n  center -- node2;\n  center -- node3;\n  center -- node4;\n}" }
{ "input": "Design a graph with a node pointing to two child nodes, each of which points to two children of their own, creating a binary tree structure.", "output": "digraph G {\n  root -> A;\n  root -> B;\n  A -> A1;\n  A -> A2;\n  B -> B1;\n  B -> B2;\n}" }
{ "input": "Draw a graph with a node pointing to three child nodes, and each child node pointing to three children of their own, creating a ternary tree structure.", "output": "digraph G {\n  root -> A;\n  root -> B;\n  root -> C;\n  A -> A1;\n  A -> A2;\n  A -> A3;\n  B -> B1;\n  B -> B2;\n  B -> B3;\n  C -> C1;\n  C -> C2;\n  C -> C3;\n}" }
{ "input": "Generate a graph representing a simple workflow with start and end points, and intermediary steps with decision points.", "output": "digraph G {\n  Start -> Step1;\n  Step1 -> Decision [label=\"Is condition met?\"];\n  Decision -> Step2 [label=\"Yes\"];\n  Decision -> Step3 [label=\"No\"];\n  Step2 -> End;\n  Step3 -> End;\n}" }
{ "input": "Create a graph with a node pointing to two child nodes, each of which points to two children of their own, and each of those nodes points to a leaf node, creating a full binary tree structure.", "output": "digraph G {\n  root -> A;\n  root -> B;\n  A -> A1;\n  A -> A2;\n  B -> B1;\n  B -> B2;\n  A1 -> A1_1;\n  A1 -> A1_2;\n  A2 -> A2_1;\n  A2 -> A2_2;\n  B1 -> B1_1;\n  B1 -> B1_2;\n  B2 -> B2_1;\n  B2 -> B2_2;\n}" }
{ "input": "Draw a simple graph with one node and a self-loop.", "output": "digraph G {\n  A -> A [label=\"self-loop\"];\n}" }
{ "input": "Generate a graph with two clusters, each containing a cycle, and an edge connecting a node in each cluster.", "output": "digraph G {\n  subgraph cluster_0 {\n    label=\"Cluster 1\";\n    A -> B;\n    B -> C;\n    C -> A;\n  }\n  subgraph cluster_1 {\n    label=\"Cluster 2\";\n    D -> E;\n    E -> F;\n    F -> D;\n  }\n  B -> E;\n}" }
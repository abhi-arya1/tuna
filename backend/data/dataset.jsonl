{"input": "How can I create a simple line plot using matplotlib?", "output": "import matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [2, 3, 5, 7, 11]\n\nplt.plot(x, y)\nplt.title('Simple Line Plot')\nplt.xlabel('X Axis Label')\nplt.ylabel('Y Axis Label')\nplt.show()"}
{"input": "What is the code for a scatter plot in matplotlib?", "output": "import matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [2, 3, 5, 7, 11]\n\ncolors = ['red', 'green', 'blue', 'orange', 'purple']\nmarkers = ['o', 's', '^', '*', 'D']\n\nfor i in range(len(x)):\n    plt.scatter(x[i], y[i], color=colors[i], marker=markers[i])\n\nplt.title('Scatter Plot')\nplt.xlabel('X Axis Label')\nplt.ylabel('Y Axis Label')\nplt.show()"}
{"input": "How do I make a bar chart in matplotlib?", "output": "import matplotlib.pyplot as plt\n\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [3, 7, 5, 8, 4]\n\nplt.bar(categories, values)\nplt.title('Bar Chart')\nplt.xlabel('Categories')\nplt.ylabel('Values')\nplt.show()"}
{"input": "Can you provide a histogram example in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = np.random.randn(1000)\nplt.hist(data, bins=30, color='blue', alpha=0.7)\nplt.title('Histogram')\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.show()"}
{"input": "How to plot a pie chart using matplotlib?", "output": "import matplotlib.pyplot as plt\n\nlabels = ['A', 'B', 'C', 'D']\nsizes = [15, 30, 45, 10]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)\nplt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.title('Pie Chart')\nplt.show()"}
{"input": "Show me how to create a 3D scatter plot in matplotlib", "output": "import matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\nx = np.random.standard_normal(100)\ny = np.random.standard_normal(100)\nz = np.random.standard_normal(100)\n\nax.scatter(x, y, z)\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\nax.set_zlabel('Z Label')\nplt.title('3D Scatter Plot')\nplt.show()"}
{"input": "How can I plot a stacked bar chart with matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nlabels = ['A', 'B', 'C', 'D']\nmen_means = [20, 35, 30, 35]\nwomen_means = [25, 32, 34, 20]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width/2, men_means, width, label='Men')\nrects2 = ax.bar(x + width/2, women_means, width, label='Women')\n\nax.set_xlabel('Groups')\nax.set_ylabel('Scores')\nax.set_title('Scores by group and gender')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\nplt.show()"}
{"input": "What is the code to create a box plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = [np.random.normal(0, std, 100) for std in range(1, 4)]\n\nplt.boxplot(data)\nplt.title('Box Plot')\nplt.xlabel('Data Groups')\nplt.ylabel('Values')\nplt.show()"}
{"input": "Generate a stem plot using matplotlib", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = np.random.rand(10)\n\nplt.stem(data, use_line_collection=True)\nplt.title('Stem Plot')\nplt.xlabel('Sample Index')\nplt.ylabel('Value')\nplt.show()"}
{"input": "How to create a contour plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(-3.0, 3.0, 100)\ny = np.linspace(-3.0, 3.0, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X**2 + Y**2)\n\nplt.contour(X, Y, Z, cmap='viridis')\nplt.title('Contour Plot')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.colorbar()\nplt.show()"}
{"input": "Can you show me how to plot a heatmap in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = np.random.rand(10, 10)\n\nplt.imshow(data, cmap='hot', interpolation='nearest')\nplt.title('Heatmap')\nplt.colorbar()\nplt.show()"}
{"input": "How to plot multiple line plots on the same graph in matplotlib?", "output": "import matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny1 = [2, 3, 5, 7, 11]\ny2 = [3, 2, 3, 8, 10]\ny3 = [4, 4, 3, 7, 9]\n\nplt.plot(x, y1, label='Line 1')\nplt.plot(x, y2, label='Line 2')\nplt.plot(x, y3, label='Line 3')\n\nplt.title('Multiple Line Plots')\nplt.xlabel('X Axis Label')\nplt.ylabel('Y Axis Label')\nplt.legend()\nplt.show()"}
{"input": "What is the code to create a time series plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\ndates = pd.date_range('20200101', periods=100)\ndata = np.cumsum(np.random.randn(100))\ndf = pd.DataFrame(data, index=dates, columns=['Value'])\n\nplt.plot(df.index, df['Value'])\nplt.title('Time Series Plot')\nplt.xlabel('Date')\nplt.ylabel('Value')\nplt.show()"}
{"input": "How to plot a filled area plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.arange(0.0, 2.0, 0.01)\ny1 = np.sin(2 * np.pi * x)\ny2 = 1.2 * np.sin(4 * np.pi * x)\n\nfig, ax = plt.subplots()\n\nax.fill_between(x, y1, y2, where=y2 > y1, facecolor='green', interpolate=True)\nax.fill_between(x, y1, y2, where=y2 <= y1, facecolor='red', interpolate=True)\nax.set_title('Filled Area Plot')\nplt.show()"}
{"input": "Show me how to create a quiver plot in matplotlib", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx, y = np.meshgrid(np.arange(0, 2 * np.pi, .2), np.arange(0, 2 * np.pi, .2))\nu = np.cos(x)\nv = np.sin(y)\n\nplt.figure()\nplt.quiver(x, y, u, v)\nplt.title('Quiver Plot')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.show()"}
{"input": "How do I plot a 3D surface plot in matplotlib?", "output": "from mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\nax.plot_surface(x, y, z, cmap='viridis')\n\nax.set_xlabel('X')\nax.set_ylabel('Y')\nax.set_zlabel('Z')\nplt.title('3D Surface Plot')\nplt.show()"}
{"input": "How can I create a violin plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = [np.random.normal(0, std, 100) for std in range(1, 4)]\n\nplt.violinplot(data, showmeans=False, showmedians=True)\nplt.title('Violin Plot')\nplt.show()"}
{"input": "Show me how to plot a radar chart in matplotlib", "output": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.path import Path\nfrom matplotlib.spines import Spine\n\ndef radar(ax, data, spoke_labels=None):\n    num_vars = len(data)\n    angles = np.linspace(0, 2 * np.pi, num_vars, endpoint=False).tolist()\n    angles += angles[:1]  # closing mechanism\n\n    stats = data.tolist()\n    stats += stats[:1]  # closing loop\n    ax.plot(angles, stats, linewidth=1, linestyle='solid')\n    ax.fill(angles, stats, alpha=0.25)\n\n    ax.set_xticks(angles[:-1])\n    ax.set_xticklabels(spoke_labels)\n    ax.set_yticklabels([])\n\n    ax.spines['polar'].set_visible(False)\n    ax.set_rticks([0.25, 0.5, 0.75])\n\n    for angle, label in zip(angles, ax.get_xticklabels()):\n        angle = angle / np.pi * 180 - 90\n        label.set_rotation(angle)\n        if angle >= 100:\n            label.set_verticalalignment('bottom')\n        else:\n            label.set_verticalalignment('top')\n\nfig, ax = plt.subplots(subplot_kw=dict(polar=True))\nspoke_labels = ['A', 'B', 'C', 'D', 'E']\nradar(ax, np.random.rand(5), spoke_labels=spoke_labels)\nplt.title('Radar Chart')\nplt.show()"}
{"input": "How do I create a polar plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ntheta = np.linspace(0.0, 2 * np.pi, 100)\nr = 1 + 0.5 * np.sin(4 * theta)\n\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_title('Polar Plot')\nplt.show()"}
{"input": "Show me how to plot a bar graph with error bars in matplotlib", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['A', 'B', 'C', 'D']\nvalues = [5, 7, 3, 8]\nerrors = [0.8, 0.4, 0.5, 0.3]\n\nplt.bar(categories, values, yerr=errors, capsize=5)\nplt.title('Bar Graph with Error Bars')\nplt.xlabel('Categories')\nplt.ylabel('Values')\nplt.show()"}
{"input": "How to create a residual plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.arange(1, 11)\ny = np.arange(1, 11) + np.random.normal(0, 1, 10)\n\nresiduals = y - x\n\nplt.scatter(x, residuals)\nplt.hlines(0, min(x), max(x), colors='r', linestyles='dashed')\nplt.title('Residual Plot')\nplt.xlabel('X')\nplt.ylabel('Residuals')\nplt.show()"}
{"input": "How do I plot a stacked area plot with matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = range(0, 10)\ny1 = np.random.rand(10)\ny2 = np.random.rand(10)\ny3 = np.random.rand(10)\n\nplt.stackplot(x, y1, y2, y3, labels=['A', 'B', 'C'])\nplt.title('Stacked Area Plot')\nplt.xlabel('X')\nplt.ylabel('Value')\nplt.legend(loc='upper left')\nplt.show()"}
{"input": "Show me how to plot a 2D histogram in matplotlib", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = np.random.randn(1000, 2)\n\nplt.hist2d(data[:, 0], data[:, 1], bins=30, cmap='plasma')\nplt.colorbar()\nplt.title('2D Histogram')\nplt.show()"}
{"input": "How to create a hexbin plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndata = np.random.randn(10000, 2)\n\nplt.hexbin(data[:, 0], data[:, 1], gridsize=25, cmap='plasma')\nplt.colorbar()\nplt.title('Hexbin Plot')\nplt.show()"}
{"input": "How do I create a bivariate normal distribution plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nmean = [0, 0]\ncov = [[1, 0], [0, 1]]\nx, y = np.random.multivariate_normal(mean, cov, 10000).T\n\ndef cov_ellipse(x, y, ax):\n    from matplotlib.patches import Ellipse\n    from scipy.stats import chi2\n    import matplotlib.transforms as transforms\n    p = chi2.ppf(0.95, 2) \n    ell = Ellipse((0, 0), 2 * np.sqrt(p * cov[0][0]), 2 * np.sqrt(p * cov[1][1]), angle=np.degrees(np.arctan2(*sorted([*cov[1], 0]))), color='green', alpha=0.3)\n    scalex = 1. / ax.transData.get_matrix()[0, 0] \n    scaley = 1. / ax.transData.get_matrix()[1, 1] \n    ell.set_transform(ell.get_transform() * transforms.Affine2D().scale(scalex, scaley)) \n    ax.add_patch(ell)\n    return ell\n\nfig, ax = plt.subplots()\ncov_ellipse(x, y, ax)\nax.scatter(x, y, s=1)\nplt.title('Bivariate Normal Distribution Plot')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.show()"}
{"input": "How to create a logarithmic plot in matplotlib?", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.logspace(0.1, 4)\ny = x ** 2\n\nplt.loglog(x, y, basex=10, basey=10)\nplt.title('Logarithmic Plot')\nplt.xlabel('X (log scale)')\nplt.ylabel('Y (log scale)')\nplt.show()"}
{"input": "Show me how to plot a stacked bar graph with error bars in matplotlib", "output": "import matplotlib.pyplot as plt\nimport numpy as np\n\ncategories = ['A', 'B', 'C', 'D']\nvalues1 = [5, 7, 3, 8]\nvalues2 = [4, 3, 7, 2]\nerrors1 = [0.8, 0.4, 0.5, 0.3]\nerrors2 = [0.6, 0.7, 0.2, 0.9]\n\nbar_width = 0.35\nindex = np.arange(len(categories))\n\nplt.bar(index, values1, bar_width, yerr=errors1, label='Category 1', capsize=5)\nplt.bar(index + bar_width, values2, bar_width, yerr=errors2, label='Category 2', capsize=5)\n\nplt.title('Stacked Bar Graph with Error Bars')\nplt.xlabel('Categories')\nplt.ylabel('Values')\nplt.xticks(index + bar_width / 2, categories)\nplt.legend()\nplt.show()"}
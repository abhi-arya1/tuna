{ "input": "Create a simple flowchart with three steps", "output": "digraph flowchart {\n    node [shape=box];\n    Start -> Step1;\n    Step1 -> Step2;\n    Step2 -> End;\n}" }
{ "input": "Design a hierarchical organization chart for a company", "output": "digraph hierarchy {\n    node [shape=box];\n    CEO -> Manager1;\n    CEO -> Manager2;\n    Manager1 -> Employee1;\n    Manager1 -> Employee2;\n    Manager2 -> Employee3;\n    Manager2 -> Employee4;\n}" }
{ "input": "Create a state machine with two states and two transitions", "output": "digraph state_machine {\n    node [shape=circle];\n    A -> B [label=\"Transition 1\"];\n    B -> A [label=\"Transition 2\"];\n}" }
{ "input": "Generate a graph with nodes colored based on their type", "output": "digraph colored_nodes {\n    node1 [color=blue];\n    node2 [color=red];\n    node1 -> node2;\n}" }
{ "input": "Design a graph with weighted edges", "output": "digraph weighted_edges {\n    A -> B [label=5];\n    B -> C [label=10];\n    C -> D [label=3];\n}" }
{ "input": "Create a tree structure with three levels", "output": "digraph tree {\n    node [shape=circle];\n    root -> child1;\n    root -> child2;\n    child1 -> grandchild1;\n    child1 -> grandchild2;\n    child2 -> grandchild3;\n    child2 -> grandchild4;\n}" }
{ "input": "Design a graph with clusters", "output": "digraph clusters {\n    subgraph cluster_0 {\n        label=\"Cluster A\";\n        A;\n        B;\n    }\n    subgraph cluster_1 {\n        label=\"Cluster B\";\n        C;\n        D;\n    }\n    B -> C;\n}" }
{ "input": "Create a graph with different shapes for nodes", "output": "digraph shapes {\n    node1 [shape=ellipse];\n    node2 [shape=hexagon];\n    node3 [shape=triangle];\n    node1 -> node2;\n    node2 -> node3;\n}" }
{ "input": "Design a timed sequence diagram", "output": "digraph seqdiagram {\n    node [shape=box];\n    rankdir=LR;\n    A -> B [label=\"Step 1\"];\n    B -> C [label=\"Step 2\"];\n    C -> D [label=\"Step 3\"];\n}" }
{ "input": "Create a graph with directed and undirected edges", "output": "graph mixed_edges {\n    rankdir=LR;\n    node [shape=circle];\n    A -> B;\n    B -- C;\n    C -> D;\n}" }
{ "input": "Design a network topology with multiple routers", "output": "digraph network {\n    node [shape=diamond];\n    Router1 -> Switch1 [label=\"100Mbps\"];\n    Router2 -> Switch2 [label=\"200Mbps\"];\n    Switch1 -> Switch2 [label=\"1Gbps\"];\n}" }
{ "input": "Create a graph with nested subgraphs", "output": "digraph nested {\n    subgraph cluster_0 {\n        label=\"Outer Cluster\";\n        subgraph cluster_1 {\n            label=\"Inner Cluster\";\n            A;\n            B;\n        }\n        C;\n    }\n    A -> C;\n}" }
{ "input": "Design a flowchart for a decision process", "output": "digraph decision_flow {\n    node [shape=box];\n    node1 [shape=diamond];\n    Start -> node1;\n    node1 -> Step1 [label=\"Yes\"];\n    node1 -> Step2 [label=\"No\"];\n    Step1 -> End;\n    Step2 -> End;\n}" }
{ "input": "Create a graph with nodes and edges with custom styles", "output": "digraph custom_style {\n    node [shape=box, style=filled, color=lightblue];\n    edge [color=green];\n    A -> B [label=\"Connection\"];\n    B -> C [label=\"Link\"];\n}" }
{ "input": "Design a directed acyclic graph (DAG)", "output": "digraph dag {\n    node [shape=oval];\n    root -> A;\n    root -> B;\n    A -> C;\n    A -> D;\n    B -> E;\n}" }
{ "input": "Create a graph with subgraphs having different ranks", "output": "digraph ranked {\n    subgraph cluster_0 {\n        rank=same;\n        A;\n        B;\n    }\n    subgraph cluster_1 {\n        rank=same;\n        C;\n        D;\n    }\n    A -> C;\n    B -> C;\n    B -> D;\n}" }
{ "input": "Design a state machine with loops", "output": "digraph state_loop {\n    node [shape=circle];\n    A -> B [label=\"Input A\"];\n    B -> C [label=\"Input B\"];\n    C -> A [label=\"Input C\"];\n    A -> D [label=\"End\"];\n}" }
{ "input": "Create a graph with parallel edges", "output": "digraph parallel {\n    node [shape=box];\n    A -> B [label=\"Path 1\"];\n    A -> B [label=\"Path 2\"];\n    B -> C [label=\"Path 3\"];\n    B -> C [label=\"Path 4\"];\n}" }
{ "input": "Design a simple class hierarchy", "output": "digraph class_hierarchy {\n    node [shape=rectangle];\n    class1;\n    class2 [shape=record, label=\"class2|+field1:int|+method1()\" color=darkseagreen];\n    class3 [shape=record, label=\"class3|+field1:int|+method1()\" color=turquoise];\n    class2 -> class1;\n    class3 -> class1;\n}" }
{ "input": "Create a graph with edge labels and styles", "output": "digraph edge_styles {\n    node [shape=box];\n    A -> B [label=\"Normal\"];\n    A -> C [label=\"Dotted\", style=dotted];\n    A -> D [label=\"Bold\", style=bold];\n}" }
{ "input": "Design a graph with nodes having custom positions", "output": "digraph positioned {\n    node [shape=circle];\n    A [pos=\"0,3!\"];\n    B [pos=\"2,2!\"];\n    C [pos=\"1,1!\"];\n    A -> B;\n    A -> C;\n}" }
{ "input": "Create a graph with subgraphs having different attributes", "output": "digraph subgraph_attributes {\n    subgraph cluster_0 {\n        label=\"Cluster 1\";\n        color=lightblue;\n        A;\n        B;\n    }\n    subgraph cluster_1 {\n        label=\"Cluster 2\";\n        color=lightgreen;\n        C;\n        D;\n    }\n    A -> C;\n    B -> D;\n}" }